{"finda":{"body":["local ${1:b} = false","for i = 1, #${2:arr} do","\tif ${2:arr}[i] == ${3:val} then","\t\t${1:b} = true","\t\tbreak","\tend","end","if ${1:b} then","\t$4","${5:else}","\t$6","end"],"prefix":"finda"},"rmapa":{"body":["for i = #${1:arr}, 1, -1 do","\tlocal ${2:v} = ${1:arr}[i]","    $3","end","$4"],"prefix":"rmapa"},"reducea":{"body":["local ${1:res} = ${2:default or arr[1]}","for i = 2, #${3:arr} do","\t${1:res} = ${4:v}","end","$5"],"prefix":"reducea"},"split":{"body":["local ${1:t1} = {}","local last = 1","local pos = ${2:spl}:find(${3:sep})","while pos do","\ttable.insert(${1:t1}, ${2:spl}:sub(last, pos - 1))","\tlast = pos + ${5:#}(${3:sep})","\tpos = ${2:spl}:find(${3:sep}, last)","end","table.insert(${1:t1}, ${2:spl}:sub(last))","$6"],"prefix":"split"},"mapt":{"body":["for ${1:k}, ${2:v} in pairs(${3:tbl}) do","\tlocal ${4:t} = ${2:v}","\t$5","end"],"prefix":"mapt"},"ifn":{"body":["if not $1 then","\t$2","end"],"prefix":"ifn"},"Say hello to the world":{"body":"Hello, ${1:world}!$0","prefix":["hw","hello"]},"mappa":{"body":["for i = 1, #${1:arr} do","\tlocal ${2:v} = ${1:arr}[i]","\t$3","end"],"prefix":"mapa"},"test":{"body":"byeaaaa i say buyyaa","prefix":"test"},"rfinda":{"body":["local ${1:b} = false","for i = #${2:arr}, 1, -1 do","\tif ${2:arr}[i] == ${3:val} then","\t\t${1:b} =true","\t\tbreak","\tend","end","if ${1:b} then","\t$4","${5:else}","\t$6","end"],"prefix":"rfinda"},"provile":{"body":["local hrtime, random = vim.uv.hrtime, math.random","local times1, times2 = {}, {}","","local function genstr()","\tlocal res = \"\"","\tfor _ = 1, 10 do","\t\tres = res .. \"/\"","\t\tfor _ = 1, math.random(10, 30) do","\t\t\tlocal rnd = math.random() > 0.5 and math.random(97, 122) or math.random(48, 57)","\t\t\tres = res .. string.char(rnd)","\t\tend","\t\tres = res .. \".\"","\t\tfor _ = 1, math.random(10, 30) do","\t\t\tlocal rnd = math.random() > 0.5 and math.random(97, 122) or math.random(48, 57)","\t\t\tres = res .. string.char(rnd)","\t\tend","\tend","\treturn res","end","local res","for _ = 1, 10000 do","\tlocal gen = ${1}","\tlocal time1 = hrtime()","\tlocal _1 = ${2}","\tlocal time2 = hrtime()","\ttable.insert(times1, time2 - time1)","\ttime1 = hrtime()","\tlocal _2 = ${3}","\ttime2 = hrtime()","\ttable.insert(times2, time2 - time1)","\tres = random() > 0.5 and _1 or _2","end","print(res)","local function av(t)","\ttable.sort(t)","\tlocal r, l = 0, #t","\tfor i = 1, l do","\t\tr = r + t[i]","\tend","\treturn table.concat({ t[1], r / l,t[l] },\" , \")","end","print(\"AV(1) \" .. av(times1))","print(\"AV(2) \" .. av(times2))"],"prefix":"profile"},"findt":{"body":["local ${1:b} = false","for _, ${2:v} in pairs(${3:tbl}) do","\tif ${2:v} == ${3:val} then","\t\t${1:b} = true","\t\tbreak","\tend","end","if ${1:b} then","\t$4","${5:else}","\t$6","end"],"prefix":"findt"},"reversea":{"body":["local ${1:t} = {}","for i = #${2:arr}, 1, -1 do","\t$3","\ttable.insert(t, ${2:arr}[i])","end","$4"],"prefix":"reversea"}}